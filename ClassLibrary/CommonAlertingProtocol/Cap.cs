/////////////////////////////////////////////////////////////////////////////////////
//  File:   Cap.cs                                                  24 Jan 23 PHR
//
//  Originally generated from the Cap.xsd file using the xsd.exe Visual Studio 2022
//  utility as follows: xsd Cap.xsd /n:CommonAlertingProtocol /f /l:CS /c
//
//  Revised: 24 Jan 23 PHR
//             -- Added documentation comments
//             -- Change arrays into List<> 
/////////////////////////////////////////////////////////////////////////////////////

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// 
// This source code was auto-generated by xsd, Version=4.8.3928.0.
// 

using System.Xml.Serialization;

namespace CommonAlertingProtocol
{
    /// <summary>
    /// Root emelement for the CAP XML document. See "Common Alerting Protocol Version 1.2 
    /// OASIS Standard"
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="urn:oasis:names:tc:emergency:cap:1.2")]
    [XmlRootAttribute(Namespace="urn:oasis:names:tc:emergency:cap:1.2", IsNullable=false)]
    public partial class alert {

        /// <summary>
        /// The identifier of the alert message. Set to a number or string uniquely identifying this 
        /// message, assigned by the sender.
        /// Required.
        /// </summary>        
        public string identifier { get; set; }

        /// <summary>
        /// The identifier of the sender of the alert message. Identifies the originator of this alert. 
        /// Guaranteed by assigner to be unique globally; e.g., may be based on an Internet domain name.
        /// Required.
        /// </summary>        
        public string sender { get; set; }

        /// <summary>
        /// The time and date of the origination of the alert message. Required.
        /// </summary>        
        public System.DateTime sent { get; set; } = DateTime.Now;

        /// <summary>
        /// The code denoting the appropriate handling of the alert message. Required.
        /// </summary>
        public alertStatus status { get; set; }

        /// <summary>
        /// The code denoting the nature of the alert message. Required.
        /// </summary>
        public alertMsgType msgType { get; set; }

        /// <summary>
        /// The particular source of this alert; e.g., an operator or a specific device.
        /// </summary>
        public string source { get; set; }

        /// <summary>
        /// The code denoting the intended distribution of the alert message. Required.
        /// </summary>
        public alertScope scope { get; set; }

        /// <summary>
        /// The text describing the rule for limiting distribution of the restricted alert message.
        /// Used when the scope value is "Restricted". Conditional.
        /// </summary>
        public string restriction { get; set; }

        /// <summary>
        /// The group listing of intended recipients of the alert message. Conditional.
        /// </summary>
        /// <remarks>
        /// <list type="number">
        /// <item>
        /// Required when scope is “Private”, optional when scope is “Public” or “Restricted”.
        /// </item>
        /// <item>
        /// Each recipient SHALL be identified by an identifier or an address.
        /// </item>
        /// <item>
        /// Multiple space-delimited addresses MAY be included. Addresses including whitespace MUST be 
        /// enclosed in double-quotes.
        /// </item>
        /// </list>
        /// </remarks>
        public string addresses { get; set; }

        /// <summary>
        /// The code denoting the special handling of the alert message. Optional.
        /// </summary>
        /// <remarks>
        /// <list type="number">
        /// <item>
        /// Any user-defined flag or special code used to flag the alert message for special handling.
        /// </item>
        /// <item>
        /// Multiple instances MAY occur.
        /// </item>
        /// </list>
        /// </remarks>
        [XmlElementAttribute("code")]
        public List<string> code { get; set; }

        /// <summary>
        /// The text describing the purpose or significance of the alert message.
        /// Optional.
        /// </summary>
        public string note { get; set; }

        /// <summary>
        /// The group listing identifying earlier message(s) referenced by the alert message.
        /// Optional.
        /// </summary>
        /// <remarks>
        /// <list type="number">
        /// <item>
        /// The extended message identifier(s) (in the form sender,identifier,sent) of an earlier 
        /// CAP message or messages referenced by this one.
        /// </item>
        /// <item>
        /// If multiple messages are referenced, they SHALL be separated by whitespace.
        /// </item>
        /// </list>
        /// </remarks>
        public string references { get; set; }

        /// <summary>
        /// The group listing naming the referent incident(s) of the alert message. Optional.
        /// </summary>
        /// <remarks>
        /// <list type="number">
        /// <item>Used to collate multiple messages referring to different aspects of the same incident.
        /// </item>
        /// <item>If multiple incident identifiers are referenced, they SHALL be separated by whitespace. 
        /// Incident names including whitespace SHALL be surrounded by double-quotes.</item>
        /// </list>
        /// </remarks>
        public string incidents { get; set; }

        /// <summary>
        /// Information pertaining to the alert. Optional.
        /// </summary>
        [XmlElementAttribute("info")]
        public List<alertInfo> info { get; set; }

        /// <summary>
        /// Extension point.
        /// </summary>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
    }
    
    /// <summary>
    /// Enumeration for the alert status.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute(AnonymousType=true, Namespace="urn:oasis:names:tc:emergency:cap:1.2")]
    public enum alertStatus {

        /// <summary>
        /// Actionable by all targeted recipients.
        /// </summary>
        Actual,

        /// <summary>
        /// Actionable only by designated exercise participants; exercise identifier SHOULD appear in note
        /// </summary>
        Exercise,

        /// <summary>
        /// For messages that support alert network internal functions.
        /// </summary>
        System,

        /// <summary>
        /// Technical testing only, all recipients disregard
        /// </summary>
        Test,

        /// <summary>
        /// A preliminary template or draft, not actionable in its current form.
        /// </summary>
        Draft,
    }
    
    /// <summary>
    /// Enumeration for the values of the alert msgType.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute(AnonymousType=true, Namespace="urn:oasis:names:tc:emergency:cap:1.2")]
    public enum alertMsgType {

        /// <summary>
        /// Initial information requiring attention by targeted recipients.
        /// </summary>
        Alert,

        /// <summary>
        /// Updates and supercedes the earlier message(s) identified in references.
        /// </summary>        
        Update,

        /// <summary>
        /// Cancels the earlier message(s) identified in references.
        /// </summary>
        Cancel,

        /// <summary>
        /// Acknowledges receipt and acceptance of the message(s) identified in references.
        /// </summary>
        Ack,

        /// <summary>
        /// Indicates rejection of the message(s) identified in references; explanation SHOULD appear in 
        /// note
        /// </summary>
        Error,
    }
    
    /// <summary>
    /// Enumeration of values for the scope element of the alert document.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [XmlTypeAttribute(AnonymousType=true, Namespace="urn:oasis:names:tc:emergency:cap:1.2")]
    public enum alertScope {

        /// <summary>
        /// For general dissemination to unrestricted audiences.
        /// </summary>
        Public,

        /// <summary>
        /// For dissemination only to users with a known operational requirement.
        /// </summary>
        Restricted,

        /// <summary>
        /// For dissemination only to specified addresses.
        /// </summary>
        Private,
    }
    
    /// <summary>
    /// Class for the info elements of the alert document.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="urn:oasis:names:tc:emergency:cap:1.2")]
    public partial class alertInfo 
    {

        /// <summary>
        /// The code denoting the language of the info sub-element of the alert message (OPTIONAL).
        /// <list type="number">
        /// <item>Code Values: Natural language identifier per [RFC 3066].</item>
        /// <item>If not present, an implicit default value of "en-US" SHALL be assumed.</item>
        /// <item>A null value in this element SHALL be considered equivalent to “en-US.”</item>
        /// </list>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="language")]
        [System.ComponentModel.DefaultValueAttribute("en-US")]
        public string language { get; set; }

        /// <summary>
        /// The code denoting the category of the subject event of the alert message REQUIRED.
        /// </summary>
        [XmlElementAttribute("category")]
        public List<alertInfoCategory> category { get; set; } = new List<alertInfoCategory>();

        /// <summary>
        /// The text denoting the type of the subject event of the alert message (REQUIRED)
        /// </summary>
        [XmlElementAttribute("event")]
        public string @event { get; set; }

        /// <summary>
        /// The code denoting the type of action recommended for the target audience (OPTIONAL)
        /// </summary>
        [XmlElementAttribute("responseType")]
        public List<alertInfoResponseType> responseType { get; set; }

        /// <summary>
        /// The code denoting the urgency of the subject event of the alert message (REQUIRED).
        /// The urgency, severity, and certainty elements collectively distinguish less emphatic 
        /// from more emphatic messages.
        /// </summary>
        public alertInfoUrgency urgency { get; set; }

        /// <summary>
        /// The code denoting the severity of the subject event of the alert message (REQUIRED)
        /// </summary>
        public alertInfoSeverity severity { get; set; }

        /// <summary>
        /// The code denoting the certainty of the subject event of the alert message (REQUIRED)
        /// </summary>
        public alertInfoCertainty certainty { get; set; }

        /// <summary>
        /// The text describing the intended audience of the alert message (OPTIONAL)
        /// </summary>
        public string audience { get; set; }

        /// <summary>
        /// A system-specific code identifying the event type of the alert message (OPTIONAL)
        /// </summary>
        [XmlElementAttribute("eventCode")]
        public List<alertInfoEventCode> eventCode { get; set; }

        /// <summary>
        /// The effective time of the information of the alert message (OPTIONAL).
        /// </summary>
        /// <seealso cref="Effective"/>
        public DateTime effective { get; set; }

        /// <summary>
        /// Set to true if the effective date element has been set.
        /// </summary>
        /// <seealso cref="Effective"/>
        [XmlIgnoreAttribute()]
        public bool effectiveSpecified { get; set; } = false;

        /// <summary>
        /// The expected time of the beginning of the subject event of the alert message (OPTIONAL).
        /// </summary>
        /// <seealso cref="Onset"/>
        public DateTime onset { get; set; }

        /// <summary>
        /// Set to true if the onset date element has been set.
        /// </summary>
        /// <seealso cref="Onset"/>
        [XmlIgnoreAttribute()]
        public bool onsetSpecified { get; set; } = false;

        /// <summary>
        /// The expiry time of the information of the alert message (OPTIONAL)
        /// </summary>
        /// <seealso cref="Expires"/>
        public DateTime expires { get; set; }

        /// <summary>
        /// Set to true if the expires date has been set.
        /// </summary>
        /// <seealso cref="Expires"/>
        [XmlIgnoreAttribute()]
        public bool expiresSpecified { get; set; } = false;

        /// <summary>
        /// The text naming the originator of the alert message (OPTIONAL).
        /// The human-readable name of the agency or authority issuing this alert.
        /// </summary>
        public string senderName { get; set; }

        /// <summary>
        /// The text headline of the alert message (OPTIONAL).
        /// </summary>
        /// <remarks>A brief human-readable headline. Note that some displays (for example, short 
        /// messaging service devices) may only present this headline; it SHOULD be made as direct and 
        /// actionable as possible while remaining short. 160 characters MAY be a useful target limit 
        /// for headline length.</remarks>
        public string headline { get; set; }

        /// <summary>
        /// The text describing the subject event of the alert message (OPTIONAL)
        /// </summary>
        /// <remarks>
        /// An extended human readable description of the hazard or event that occasioned this message.
        /// </remarks>
        public string description { get; set; }

        /// <summary>
        /// The text describing the recommended action to be taken by recipients of the alert message 
        /// (OPTIONAL).
        /// </summary>
        /// <remarks>
        /// An extended human readable instruction to targeted recipients. If different instructions are 
        /// intended for different recipients, they should be represented by use of multiple info blocks.
        /// </remarks>
        public string instruction { get; set; }

        /// <summary>
        /// The identifier of the hyperlink associating additional information with the alert message 
        /// (OPTIONAL).
        /// </summary>
        /// <remarks>
        /// A full, absolute URI for an HTML page or other text resource with additional or reference 
        /// information regarding this alert.
        /// </remarks>
        [XmlElementAttribute(DataType="anyURI")]
        public string web { get; set; }

        /// <summary>
        /// The text describing the contact for follow-up and confirmation of the alert message (OPTIONAL)
        /// </summary>
        public string contact { get; set; }

        /// <summary>
        /// A system-specific additional parameter associated with the alert message (OPTIONAL)
        /// </summary>
        [XmlElementAttribute("parameter")]
        public List<alertInfoParameter> parameter { get; set; }

        /// <summary>
        /// Contains all the infomation about resources (OPTIONAL).
        /// </summary>
        /// <remarks>
        /// Refers to an additional file with supplemental information related to this info element; 
        /// e.g., an image or audio file.
        /// </remarks>
        [XmlElementAttribute("resource")]
        public List<alertInfoResource> resource { get; set; }

        /// <summary>
        /// Description of the affected area of the alert (OPTIONAL).
        /// </summary>
        [XmlElementAttribute("area")]
        public List<alertInfoArea> area { get; set; }

        /// <summary>
        /// Default constructor.
        /// </summary>
        public alertInfo() {
            this.language = "en-US";
        }
    }
    
    /// <summary>
    /// Enumeration for the category element of the alertInfo class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [XmlTypeAttribute(AnonymousType=true, Namespace="urn:oasis:names:tc:emergency:cap:1.2")]
    public enum alertInfoCategory {

        /// <summary>
        /// Geophysical (inc. landslide).
        /// </summary>
        Geo,

        /// <summary>
        /// Meteorological (inc. flood).
        /// </summary>
        Met,

        /// <summary>
        /// General emergency and public safety.
        /// </summary>
        Safety,

        /// <summary>
        /// Law enforcement, military, homeland and local/private security
        /// </summary>
        Security,

        /// <summary>
        /// Rescue and recovery
        /// </summary>
        Rescue,

        /// <summary>
        /// Fire suppression and rescue
        /// </summary>
        Fire,

        /// <summary>
        /// Medical and public health
        /// </summary>
        Health,

        /// <summary>
        /// Pollution and other environmental
        /// </summary>
        Env,

        /// <summary>
        /// Public and private transportation
        /// </summary>
        Transport,

        /// <summary>
        /// Utility, telecommunication, other non-transport infrastructure
        /// </summary>
        Infra,

        /// <summary>
        /// Chemical, Biological, Radiological, Nuclear or High-Yield Explosive threat or attack
        /// </summary>
        CBRNE,

        /// <summary>
        /// Other events
        /// </summary>
        Other,
    }
    
    /// <summary>
    /// Enumeration of values for the responseType element of the alertInfo class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [XmlTypeAttribute(AnonymousType=true, Namespace="urn:oasis:names:tc:emergency:cap:1.2")]
    public enum alertInfoResponseType {
        /// <summary>
        /// Take shelter in place or per the instruction element
        /// </summary>
        Shelter,

        /// <summary>
        /// Relocate as instructed in the instruction element
        /// </summary>
        Evacuate,

        /// <summary>
        /// Make preparations per the instruction element
        /// </summary>
        Prepare,

        /// <summary>
        /// Execute a pre-planned activity identified in the instruction element
        /// </summary>
        Execute,

        /// <summary>
        /// Avoid the subject event as per the instruction element
        /// </summary>
        Avoid,

        /// <summary>
        /// Attend to information sources as described in the instruction element
        /// </summary>
        Monitor,

        /// <summary>
        /// Evaluate the information in this message. (This value SHOULD NOT be used in public 
        /// warning applications.)
        /// </summary>
        Assess,

        /// <summary>
        /// The subject event no longer poses a threat or concern and any follow on action is 
        /// described in the instruction element
        /// </summary>
        AllClear,

        /// <summary>
        /// No action recommended
        /// </summary>
        None,
    }
    
    /// <summary>
    /// Enumeration of the values for the urgency element of the alertInfo class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [XmlTypeAttribute(AnonymousType=true, Namespace="urn:oasis:names:tc:emergency:cap:1.2")]
    public enum alertInfoUrgency {

        /// <summary>
        /// Responsive action SHOULD be taken immediately
        /// </summary>
        Immediate,

        /// <summary>
        /// Responsive action SHOULD be taken soon (within next hour)
        /// </summary>
        Expected,

        /// <summary>
        /// Responsive action SHOULD be taken in the near future
        /// </summary>
        Future,

        /// <summary>
        /// Responsive action is no longer required
        /// </summary>
        Past,

        /// <summary>
        /// Urgency not known
        /// </summary>
        Unknown,
    }
    
    /// <summary>
    /// Enumeration of values for the severity element of the alertInfo class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [XmlTypeAttribute(AnonymousType=true, Namespace="urn:oasis:names:tc:emergency:cap:1.2")]
    public enum alertInfoSeverity {

        /// <summary>
        /// Extraordinary threat to life or property
        /// </summary>
        Extreme,

        /// <summary>
        /// Significant threat to life or property
        /// </summary>
        Severe,

        /// <summary>
        /// Possible threat to life or property
        /// </summary>
        Moderate,

        /// <summary>
        /// Minimal to no known threat to life or property
        /// </summary>
        Minor,

        /// <summary>
        /// Severity unknown
        /// </summary>
        Unknown,
    }
    
    /// <summary>
    /// Enumeration of values for the certainty element of the alertInfo class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [XmlTypeAttribute(AnonymousType=true, Namespace="urn:oasis:names:tc:emergency:cap:1.2")]
    public enum alertInfoCertainty {

        /// <summary>
        /// Determined to have occurred or to be ongoing
        /// </summary>
        Observed,

        /// <summary>
        /// Likely (p greater than ~50%)
        /// </summary>
        Likely,

        /// <summary>
        /// Possible but not likely (p less than or equal to ~50%)
        /// </summary>
        Possible,

        /// <summary>
        /// Not expected to occur (p ~ 0)
        /// </summary>
        Unlikely,

        /// <summary>
        /// Certainty unknown
        /// </summary>
        Unknown,
    }

    /// <summary>
    /// Class for any system-specific code for event typing
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="urn:oasis:names:tc:emergency:cap:1.2")]
    public partial class alertInfoEventCode {

        /// <summary>
        /// A user-assigned string designating the domain of the code
        /// </summary>
        public string valueName { get; set; }

        /// <summary>
        /// A string (which may represent a number) denoting the value itself
        /// </summary>
        public string value { get; set; }
    }

    /// <summary>
    /// Class for providing any system-specific data.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="urn:oasis:names:tc:emergency:cap:1.2")]
    public partial class alertInfoParameter {

        /// <summary>
        /// A user-assigned string designating the domain of the code
        /// </summary>
        public string valueName { get; set; }

        /// <summary>
        /// A string (which may represent a number) denoting the value itself.
        /// </summary>
        public string value { get; set; }
    }
    
    /// <summary>
    /// Data class for the resource element of the alertInfo class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="urn:oasis:names:tc:emergency:cap:1.2")]
    public partial class alertInfoResource {

        /// <summary>
        /// Text describing the type and content of the resource file (REQUIRED).
        /// Human-readable text describing the type and content, such as “map” or “photo”, of the resource 
        /// file.
        /// </summary>
        public string resourceDesc { get; set; }

        /// <summary>
        /// The identifier of the MIME content type and sub-type describing the resource file (REQUIRED).
        /// </summary>
        public string mimeType { get; set; }

        /// <summary>
        /// Integer indicating the size of the resource file (OPTIONAL). 
        /// The size may be approximate.
        /// </summary>
        [XmlElementAttribute(DataType="integer")]
        public string size { get; set; }

        /// <summary>
        /// The identifier of the hyperlink for the resource file (OPTIONAL).
        /// A full absolute URI, typically a Uniform Resource Locator that can be used to retrieve 
        /// the resource over the Internet or a relative URI to name the content of a derefUri 
        /// element if one is present in this resource block.
        /// </summary>
        [XmlElementAttribute(DataType="anyURI")]
        public string uri { get; set; }

        /// <summary>
        /// The base-64 encoded data content of the resource file (CONDITIONAL).
        /// </summary>
        /// <remarks>
        /// <list type="number">
        /// <item>MAY be used either with or instead of the uri element in messages transmitted 
        /// over one-way (e.g., broadcast) data links where retrieval of a resource via a URI is not 
        /// feasible.</item>
        /// <item>Clients intended for use with one-way data links MUST support this element.</item>
        /// <item>This element MUST NOT be used unless the sender is certain that all direct clients 
        /// are capable of processing it.</item>
        /// <item>If messages including this element are forwarded onto a two-way network, the forwarder
        /// MUST strip the derefUri element and SHOULD extract the file contents and provide a uri link 
        /// to a retrievable version of the file.</item>
        /// <item>Providers of one-way data links MAY enforce additional restrictions on the use of this 
        /// element, including message-size limits and restrictions regarding file types.</item>
        /// </list>
        /// </remarks>
        public string derefUri { get; set; }

        /// <summary>
        /// The code representing the digital digest (“hash”) computed from the resource file (OPTIONAL).
        /// Calculated using the Secure Hash Algorithm (SHA-1) per [FIPS 180-2].
        /// </summary>
        public string digest { get; set; }
    }
    
    /// <summary>
    /// Data class to describe the geographic area of the alert.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="urn:oasis:names:tc:emergency:cap:1.2")]
    public partial class alertInfoArea {

        /// <summary>
        /// Text describing the affected area of the alert message (REQUIRED).
        /// </summary>
        public string areaDesc { get; set; }

        /// <summary>
        /// Paired values of points defining a polygon that delineates the affected area of the alert 
        /// message (OPTIONAL). Each string in the array (list) contains the coordinates for one polygon.
        /// </summary>
        /// <remarks>
        /// <list type="number">
        /// <item>The geographic polygon is represented by a whitespace-delimited list of [WGS 84] coordinate
        /// pairs.</item>
        /// <item>A minimum of 4 coordinate pairs MUST be present and the first and last pairs of coordinates 
        /// MUST be the same.</item>
        /// <item>Multiple instances MAY occur within an area block</item>
        /// </list>
        /// </remarks>
        /// <seealso cref="PidfPolygonList"/>
        [XmlElementAttribute("polygon")]
        public List<string> polygon { get; set; }

        /// <summary>
        /// paired values of a point and radius delineating the affected area of the alert message 
        /// (OPTIONAL).
        /// Each string in the array (list) contains one circle.
        /// </summary>
        /// <remarks>
        /// The circular area is represented by a central point given as a [WGS 84] coordinate pair 
        /// followed by a space character and a radius value in kilometers.
        /// </remarks>
        /// <seealso cref="PidfCircleList"/>
        [XmlElementAttribute("circle")]
        public List<string> circle { get; set; }

        /// <summary>
        /// Geographic code delineating the affected area of the alert message (OPTIONAL).
        /// </summary>
        [XmlElementAttribute("geocode")]
        public List<alertInfoAreaGeocode> geocode { get; set; }

        /// <summary>
        /// The specific or minimum altitude of the affected area of the alert message (OPTIONAL).
        /// </summary>
        /// <remarks>
        /// <list type="number">
        /// <item>If used with the ceiling element this value is the lower limit of a range. 
        /// Otherwise, this value specifies a specific altitude.</item>
        /// <item>The altitude measure is in feet above mean sea level per the [WGS 84] datum.</item>
        /// </list>
        /// </remarks>
        /// <seealso cref="Altitude"/>
        public decimal altitude { get; set; }

        /// <summary>
        /// Set to true if the altitude element value has been set.
        /// </summary>
        /// <seealso cref="Altitude"/>
        [XmlIgnoreAttribute()]
        public bool altitudeSpecified { get; set; } = false;

        /// <summary>
        /// The maximum altitude of the affected area of the alert message (CONDITIONAL).
        /// </summary>
        /// <remarks>
        /// <list type="number">
        /// <item>MUST NOT be used except in combination with the altitude element.</item>
        /// <item>The ceiling measure is in feet above mean sea level per the [WGS 84] datum.</item>
        /// </list>
        /// </remarks>
        /// <seealso cref="Ceiling"/>
        public decimal ceiling { get; set; }

        /// <summary>
        /// Set to true if the value for the ceiling element has been set.
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ceilingSpecified { get; set; } = false;
    }

    /// <summary>
    /// Class for describing geographically-based code to describe a message target area.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="urn:oasis:names:tc:emergency:cap:1.2")]
    public partial class alertInfoAreaGeocode {

        /// <summary>
        /// A user-assigned string designating the domain of the code.
        /// </summary>
        public string valueName { get; set; }

        /// <summary>
        /// A string (which may represent a number) denoting the value itself.
        /// </summary>
        public string value { get; set; }
    }
}
