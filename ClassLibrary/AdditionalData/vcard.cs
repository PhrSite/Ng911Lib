//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.8.3928.0.
// 

/////////////////////////////////////////////////////////////////////////////////////
//  Revised:  21 Mar 23 PHR
//              -- Simplified the XML namespaces and attributes
//              -- Changed the following auto generated enum type names to more 
//              -- meaning type names: ItemChoiceType, ItemChoiceType1, ItemChoiceType2,
//              -- ItemChoiceType3, ItemChoiceType4, ItemChoiceType5 and ItemChoiceType6
//              -- Added documentation comments
/////////////////////////////////////////////////////////////////////////////////////

using System.Xml;
using System.Xml.Serialization;

namespace AdditionalData {
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class language {
        
        /// <summary>
        /// Contains the language tag as described in RFC 5646. For example: en-US.
        /// </summary>
        [XmlElement("language-tag")]
        public string languagetag;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class pref {

        /// <summary>
        /// The preference value MUST be an integer between 1 and 100 that quantifies the level of
        /// preference.Lower values correspond to a higher level of preference, with 1 being most
        /// preferred.
        /// </summary>
        [XmlElement(DataType="integer")]
        public string integer;
    }

    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class altid {

        /// <summary>
        /// Opaque string. Its sole purpose is to be compared for equality against other ALTID
        /// parameter values.
        /// </summary>
        public string text;
    }

    /// <summary>
    /// Class for the PID parameter is used to identify a specific property among multiple instances.
    /// See Section 5.5 of RFC 6350.
    /// </summary>
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class pid {

        /// <summary>
        /// Each element must contain either a single small positive integer or a pair of small positive 
        /// integers separated by a dot.
        /// </summary>
        [XmlElement("text")]
        public string[] text;
    }
    
    /// <summary>
    /// Class for the type parameter. Identifies the type of another parameter.
    /// </summary>
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class type {
        
        /// <summary>
        /// Contains a typeText enum value of wither work or home.
        /// </summary>
        [XmlElement("text")]
        public typeText[] text;
    }
    
    /// <summary>
    /// Enumeration for the type class.
    /// </summary>
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public enum typeText {
        
        /// <remarks/>
        work,
        
        /// <remarks/>
        home,
    }

    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class mediatype {

        /// <summary>
        /// Set to a value that provides a hint to the vCard consumer application about the media type.
        /// For example: audio
        /// </summary>
        public string text;
    }
    
    /// <summary>
    /// Class for the CALSCALE parameter. See Section 5.8 of RFC 6350.
    /// </summary>
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class calscale {
        
        /// <summary>
        /// Defines the calender system in which a date or a date-time value is expressed.
        /// </summary>
        public calscaleText text;
    }
    
    /// <summary>
    /// Enumeration for specifying a calender system.
    /// </summary>
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public enum calscaleText {
        
        /// <remarks/>
        gregorian,
    }

    /// <summary>
    /// Class for the sort-as parameter. This parameter is used to specify the string to be used for
    /// national-language-specific sorting. See Section 5.9 of RFC 7852.
    /// </summary>
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot("sort-as", Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class sortas {

        /// <summary>
        /// Must be set to a comma-separated list that MUST have as many or fewer elements as the 
        /// corresponding property value has components.This parameter’s value is case-sensitive.
        /// </summary>
        [XmlElement("text")]
        public string[] text;
    }

    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class source {
        
        /// <summary>
        /// Specifies the parameters for the source.
        /// </summary>
        public sourceParameters parameters;
        
        /// <summary>
        /// URI of the source.
        /// </summary>
        [XmlElement(DataType="anyURI")]
        public string uri;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class sourceParameters {
        
        /// <remarks/>
        public altid altid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("text", IsNullable=false)]
        public string[] pid;
        
        /// <remarks/>
        public pref pref;
        
        /// <remarks/>
        public mediatype mediatype;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class kind {
        
        /// <summary>
        /// May be one of the following values: individual, group, org, or location.
        /// </summary>
        [XmlElement(DataType="token")]
        public string text;
    }

    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class fn {
        
        /// <summary>
        /// Specifies the parameters for the FN property.
        /// </summary>
        public fnParameters parameters;
        
        /// <summary>
        /// Contains the full or formatted name. For example: John Doe
        /// </summary>
        public string text;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class fnParameters {
        
        /// <summary>
        /// Language property
        /// </summary>
        public language language;
        
        /// <summary>
        /// Alternate ID
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID values
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference value
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class n {
        
        /// <summary>
        /// Parameters for the name
        /// </summary>
        public nParameters parameters;
        
        /// <summary>
        /// Surname (s) or last name component of the name.
        /// </summary>
        /// <seealso cref="LastName"/>
        [XmlElement("surname")]
        public string[] surname;
        
        /// <summary>
        /// Given or first name (s)
        /// </summary>
        /// <seealso cref="FirstName"/>
        [XmlElement("given")]
        public string[] given;
        
        /// <summary>
        /// Additional (s) or middle name (s)
        /// </summary>
        /// <seealso cref="MiddleName"/>
        [XmlElement("additional")]
        public string[] additional;
        
        /// <summary>
        /// Prefix (s) for the name
        /// </summary>
        /// <seealso cref="Prefix"/>
        [System.Xml.Serialization.XmlElementAttribute("prefix")]
        public string[] prefix;
        
        /// <summary>
        /// Suffix (s) for the name.
        /// </summary>
        /// <seealso cref="Suffix"/>
        [System.Xml.Serialization.XmlElementAttribute("suffix")]
        public string[] suffix;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class nParameters {
        
        /// <summary>
        /// Language parameters
        /// </summary>
        public language language;
        
        /// <summary>
        /// Specifies sorting parameters
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("sort-as")]
        [System.Xml.Serialization.XmlArrayItemAttribute("text", IsNullable=false)]
        public string[] sortas;
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class nickname {
        
        /// <summary>
        /// Nickname parameters
        /// </summary>
        public nicknameParameters parameters;
        
        /// <summary>
        /// Specifies the nickname value
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("text")]
        public string[] text;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class nicknameParameters {
        
        /// <summary>
        /// Language parameters
        /// </summary>
        public language language;
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class photo {
        
        /// <summary>
        /// Parameters for the photo
        /// </summary>
        public photoParameters parameters;
        
        /// <summary>
        /// URI to dereference to get the photo
        /// </summary>
        [XmlElement(DataType="anyURI")]
        public string uri;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class photoParameters {
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
        
        /// <summary>
        /// Media type parameters
        /// </summary>
        public mediatype mediatype;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class bday {
        
        /// <summary>
        /// Parameters for the birth date or birth day
        /// </summary>
        public bdayParameters parameters;
        
        /// <summary>
        /// Contains the value of the date. The type of object and its format is determined by the
        /// ItemElementName element.
        /// </summary>
        [XmlElement("date", typeof(string))]
        [XmlElement("date-time", typeof(string))]
        [XmlElement("text", typeof(string))]
        [XmlElement("time", typeof(string))]
        [XmlElement("value-date-and-or-time", typeof(object))]
        [XmlChoiceIdentifier("ItemElementName")]
        public object Item;
        
        /// <summary>
        /// Determines the type of object and the format of the Item element
        /// </summary>
        [XmlIgnore()]
        public BdayItemChoiceEnum ItemElementName;
    }
    
    /// <summary>
    /// Class for the parameters of the bday property.
    /// </summary>
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class bdayParameters {
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// Identifies the calendar type
        /// </summary>
        public calscale calscale;
    }
    
    /// <summary>
    /// Enumeration for the type of date stored in the Item property of the bday class.
    /// </summary>
    [Serializable()]
    [XmlType(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IncludeInSchema=false)]
    public enum BdayItemChoiceEnum {
        
        /// <summary>
        /// The item is a date
        /// </summary>
        date,
        
        /// <summary>
        /// The item contains a date and time value
        /// </summary>
        [XmlEnumAttribute("date-time")]
        datetime,
        
        /// <summary>
        /// The item contains a string that may be a partial date
        /// </summary>
        text,
        
        /// <summary>
        /// The item contains a time that may be a partial time
        /// </summary>
        time,
        
        /// <summary>
        /// The item contains a string the may contain a date and/or a time
        /// </summary>
        [XmlEnumAttribute("value-date-and-or-time")]
        valuedateandortime,
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class anniversary {
        
        /// <summary>
        /// Parameters for the anniversar
        /// </summary>
        public anniversaryParameters parameters;

        /// <summary>
        /// Contains the value of the date. The type of object and its format is determined by the
        /// ItemElementName element.
        /// </summary>
        [XmlElement("date", typeof(string))]
        [XmlElement("date-time", typeof(string))]
        [XmlElement("text", typeof(string))]
        [XmlElement("time", typeof(string))]
        [XmlElement("value-date-and-or-time", typeof(object))]
        [XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;

        /// <summary>
        /// Determines the type of object and the format of the Item element
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public AnniversaryItemChoiceEnum ItemElementName;
    }
    
    /// <summary>
    /// Class containing the parameters for the anniversary class
    /// </summary>
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class anniversaryParameters {
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// Specifies the type of calendar
        /// </summary>
        public calscale calscale;
    }

    /// <summary>
    /// Enumeration for the type of date stored in the Item property of the anniversary class.
    /// </summary>
    [Serializable()]
    [XmlType(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IncludeInSchema=false)]
    public enum AnniversaryItemChoiceEnum {

        /// <summary>
        /// The item is a date
        /// </summary>
        date,

        /// <summary>
        /// The item contains a date and time value
        /// </summary>
        [XmlEnumAttribute("date-time")]
        datetime,

        /// <summary>
        /// The item contains a string that may be a partial date
        /// </summary>
        text,

        /// <summary>
        /// The item contains a time that may be a partial time
        /// </summary>
        time,

        /// <summary>
        /// The item contains a string the may contain a date and/or a time
        /// </summary>
        [XmlEnumAttribute("value-date-and-or-time")]
        valuedateandortime,
    }

    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class gender {
        
        /// <summary>
        /// Specifies the sex (male, female, etc...)
        /// </summary>
        public sex sex;
        
        /// <summary>
        /// Free form text that indicates which sex the person identifies with.
        /// </summary>
        public string identity;
    }
    
    /// <summary>
    /// Enumeration of the sex value
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public enum sex {
        
        /// <summary>
        /// Allows for handling of an unknown element
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("")]
        Item,
        
        /// <summary>
        /// Male
        /// </summary>
        M,
        
        /// <summary>
        /// Female
        /// </summary>
        F,
        
        /// <summary>
        /// Other
        /// </summary>
        O,
        
        /// <summary>
        /// None or not applicable
        /// </summary>
        N,
        
        /// <summary>
        ///  Unknown
        /// </summary>
        U,
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class label {
        
        /// <summary>
        /// Contains formatted text, including carriage returns and line feeds of the address label.
        /// </summary>
        public string text;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class adr {
        
        /// <summary>
        /// Parameters for the address
        /// </summary>
        public adrParameters parameters;
        
        /// <summary>
        /// Post office box(s)
        /// </summary>
        /// <seealso cref="PoBox"/>
        [XmlElement("pobox")]
        public string[] pobox;

        /// <summary>
        /// Extended address (e.g., apartment or suite number)
        /// </summary>
        /// <seealso cref="Ext"/>
        [XmlElement("ext")]
        public string[] ext;
        
        /// <summary>
        /// Full street address. Includes prefixes, street number, street name a suffixes.
        /// </summary>
        /// <seealso cref="Street"/>
        [XmlElement("street")]
        public string[] street;
        
        /// <summary>
        /// Locality or city name
        /// </summary>
        /// <seealso cref="City"/>
        [XmlElement("locality")]
        public string[] locality;
        
        /// <summary>
        /// Region, state or province
        /// </summary>
        /// <seealso cref="State"/>
        [XmlElement("region")]
        public string[] region;
        
        /// <summary>
        /// Postal or zip code.
        /// </summary>
        /// <seealso cref="ZipCode"/>
        [XmlElement("code")]
        public string[] code;
        
        /// <summary>
        /// Country
        /// </summary>
        /// <seealso cref="Country"/>
        [XmlElement("country")]
        public string[] country;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class adrParameters {
        
        /// <summary>
        /// Language parameters
        /// </summary>
        public language language;
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
        
        /// <summary>
        /// Geographic parameters
        /// </summary>
        public adrParametersGeo geo;
        
        /// <summary>
        /// Time zone parameters
        /// </summary>
        public adrParametersTZ tz;
        
        /// <summary>
        /// Address label for display
        /// </summary>
        public label label;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class adrParametersGeo {
        
        /// <summary>
        /// Contains a geo URI scheme location. See RFC 5870.
        /// </summary>
        [XmlElement(DataType="anyURI")]
        public string uri;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class adrParametersTZ {

        /// <summary>
        /// The ItemElementName field determines the contents of this string. If the ItemElementName
        /// is equal to AdrParametersItemChoiceEnum.text, then It is expected that names from the 
        /// public-domain Olson database [https://www.ip2location.com/free/olson-timezone] will be used, 
        /// but this is not a restriction. See also https://www.iana.org/time-zones.
        /// If the ItemElementName is equal to AdrParametersItemChoiceEnum.uri then the contents is a URI. 
        /// Use of a URI is To Be Determine (TBD).
        /// </summary>
        [XmlElement("text", typeof(string))]
        [XmlElement("uri", typeof(string), DataType="anyURI")]
        [XmlChoiceIdentifier("ItemElementName")]
        public string Item;
        
        /// <summary>
        /// Determines the type of data that is contained in the Item field.
        /// </summary>
        [XmlIgnore()]
        public AdrParametersItemChoiceEnum ItemElementName;
    }
    
    /// <summary>
    /// Enumeration of the values used in the Item field of the adrParametersTZ class.
    /// </summary>
    [Serializable()]
    [XmlType(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IncludeInSchema=false)]
    public enum AdrParametersItemChoiceEnum {
        
        /// <summary>
        /// The Item field of the adrParametersTZ class contains a time zone name.
        /// </summary>
        text,
        
        /// <summary>
        /// The Item field contains a URI (the scheme for the TZ has not been determined yet)
        /// </summary>
        uri,
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class tel {
        
        /// <summary>
        /// TEL parameters
        /// </summary>
        public telParameters parameters;
        
        /// <summary>
        /// Contains the telephone number. This can be either a simple numeric text string or a tel,
        /// or a sip URI. The ItemElementName field determines the type of contents.
        /// </summary>
        [XmlElement("text", typeof(string))]
        [XmlElement("uri", typeof(string), DataType="anyURI")]
        [XmlChoiceIdentifier("ItemElementName")]
        public string Item;
        
        /// <summary>
        /// Specifies the content type for the Item field.
        /// </summary>
        [XmlIgnore()]
        public TelItemChoiceEnum ItemElementName;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class telParameters {
        
        /// <summary>
        /// Alternate ID parameter
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// May contain one or more of the predefined values: text, voice, fax, cell, video, pager and
        /// textphone.
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] type;
        
        /// <summary>
        /// Media type parameters
        /// </summary>
        public mediatype mediatype;
    }
    
    /// <summary>
    /// Enumeration for the ItemElementName field of the tel class
    /// </summary>
    [Serializable()]
    [XmlType(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IncludeInSchema=false)]
    public enum TelItemChoiceEnum {
        
        /// <summary>
        /// The Item field of the tel class contains a numeric string telephone number
        /// </summary>
        text,
        
        /// <summary>
        /// The Item field of the tel class contains a tel or a sip URI.
        /// </summary>
        uri,
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class email {
        
        /// <summary>
        /// E-Mail parameters
        /// </summary>
        public emailParameters parameters;
        
        /// <summary>
        /// Contains the e-mail address of the subject of the vCard.
        /// </summary>
        public string text;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class emailParameters {
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [System.Xml.Serialization.XmlArrayItemAttribute("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type of the e-mail address (work or home)
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class impp {
        
        /// <summary>
        /// IMPP parameters
        /// </summary>
        public imppParameters parameters;
        
        /// <summary>
        /// Contains the IMPP URI
        /// </summary>
        [XmlElement(DataType="anyURI")]
        public string uri;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class imppParameters {
        
        /// <summary>
        /// Alternate ID pararameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type of the IMPP: work or home
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
        
        /// <summary>
        /// Media type parameters
        /// </summary>
        public mediatype mediatype;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class lang {
        
        /// <summary>
        /// Language parameters
        /// </summary>
        public langParameters parameters;
        
        /// <summary>
        /// Language tag. For example: en or fr
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("language-tag")]
        public string languagetag;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class langParameters {
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [System.Xml.Serialization.XmlArrayItemAttribute("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type of the language. For example: work or home
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class title {
        
        /// <summary>
        /// Title parameters
        /// </summary>
        public titleParameters parameters;
        
        /// <summary>
        /// Contains a string that indicates the job or other title of the subject of the vCard.
        /// </summary>
        public string text;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class titleParameters {
        
        /// <summary>
        /// Language parameters
        /// </summary>
        public language language;
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type of the title. For example: work or home
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class role {
        
        /// <summary>
        /// Role parameters
        /// </summary>
        public roleParameters parameters;
        
        /// <summary>
        /// Contains a string that indicates the role of the subject of the vCard
        /// </summary>
        public string text;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class roleParameters {
        
        /// <summary>
        /// Language parameters
        /// </summary>
        public language language;
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type of the role. For example: work or home
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class logo {
        
        /// <summary>
        /// Logo parameters
        /// </summary>
        public logoParameters parameters;
        
        /// <summary>
        /// URI for the logo
        /// </summary>
        [XmlElement(DataType="anyURI")]
        public string uri;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class logoParameters {
        
        /// <summary>
        /// Logo language parameters
        /// </summary>
        public language language;
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [System.Xml.Serialization.XmlArrayItemAttribute("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type parameters for the logo. For example: work or home
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
        
        /// <summary>
        /// Media type parameters
        /// </summary>
        public mediatype mediatype;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class org {

        /// <summary>
        /// Organization parameters
        /// </summary>        
        public orgParameters parameters;

        /// <summary>
        /// The property is based on the X.520 Organization Name and Organization Unit attributes
        /// The property value is a structured type consisting of the organization name, followed by zero or 
        /// more levels of organizational unit names.
        /// For example: ABC Inc.;North American Division;Marketing
        /// </summary>
        [XmlElement("text")]
        public string[] text;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class orgParameters {
        
        /// <summary>
        /// Language parameters
        /// </summary>
        public language language;
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Organization type parameters. For example: work or home
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
        
        /// <summary>
        /// Sort-As parameters
        /// </summary>
        [XmlArray("sort-as")]
        [XmlArrayItem("text", IsNullable=false)]
        public string[] sortas;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class member {
        
        /// <summary>
        /// Member parameters
        /// </summary>
        public memberParameters parameters;

        /// <summary>
        /// A single URI. It MAY refer to something other than a vCard object. For example, an email 
        /// distribution list could employ the "mailto" URI scheme
        /// </summary>
        [XmlElement(DataType="anyURI")]
        public string uri;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class memberParameters {
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Media type parameters
        /// </summary>
        public mediatype mediatype;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class related {
        
        /// <summary>
        /// Related parameters
        /// </summary>
        public relatedParameters parameters;

        /// <summary>
        /// The ItemElementName field specifies the type of data contained in this field. If the
        /// ItemElementName is RelatedParametersItemChoiceEnum.uri then this field contain a URI that points to another
        /// vCard. If the ItemElementName is equal to RelatedParametersItemChoiceEnum.text then this field can contain
        /// a single text value.The text value can be used to specify textual information.
        /// Note: The type parameter of the relatedParameters class is used to specify multiple 
        /// relationships.
        /// </summary>
        [XmlElement("text", typeof(string))]
        [XmlElement("uri", typeof(string), DataType="anyURI")]
        [XmlChoiceIdentifier("ItemElementName")]
        public string Item;
        
        /// <summary>
        /// Specifies the type of data contained in the Item field.
        /// </summary>
        [XmlIgnore()]
        public RelatedParametersItemChoiceEnum ItemElementName;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class relatedParameters {
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [System.Xml.Serialization.XmlArrayItemAttribute("text", IsNullable=false)]
        public string[] pid;
        
        /// <remarks/>
        public pref pref;
        
        /// <summary>
        /// Contains one or more values that specifies the relationship to the subject of this vCard.
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public relatedParametersText[] type;
        
        /// <summary>
        ///  Media type parameters
        /// </summary>
        public mediatype mediatype;
    }

    /// <summary>
    /// Enumeration of the values allowed in the type array of the relatedParameters class.
    /// </summary>
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public enum relatedParametersText {
        
        /// <remarks/>
        work,
        
        /// <remarks/>
        home,
        
        /// <remarks/>
        contact,
        
        /// <remarks/>
        acquaintance,
        
        /// <remarks/>
        friend,
        
        /// <remarks/>
        met,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("co-worker")]
        coworker,
        
        /// <remarks/>
        colleague,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("co-resident")]
        coresident,
        
        /// <remarks/>
        neighbor,
        
        /// <remarks/>
        child,
        
        /// <remarks/>
        parent,
        
        /// <remarks/>
        sibling,
        
        /// <remarks/>
        spouse,
        
        /// <remarks/>
        kin,
        
        /// <remarks/>
        muse,
        
        /// <remarks/>
        crush,
        
        /// <remarks/>
        date,
        
        /// <remarks/>
        sweetheart,
        
        /// <remarks/>
        me,
        
        /// <remarks/>
        agent,
        
        /// <remarks/>
        emergency,
    }
    
    /// <summary>
    /// Enumeration of the type of data values contained in the Item field of the related class.
    /// </summary>
    [Serializable()]
    [XmlType(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IncludeInSchema=false)]
    public enum RelatedParametersItemChoiceEnum {
        
        /// <remarks/>
        text,
        
        /// <remarks/>
        uri,
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class categories {
        
        /// <summary>
        /// Categories parameters
        /// </summary>
        public categoriesParameters parameters;
        
        /// <summary>
        /// Contains an array of strings that describe the categories for this vCard. The types of
        /// categories is not specified.
        /// </summary>
        [XmlElement("text")]
        public string[] text;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class categoriesParameters {
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preferences
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type of the category. For example: work or home
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class note {
        
        /// <summary>
        /// Note parameters
        /// </summary>
        public noteParameters parameters;
        
        /// <summary>
        /// Free text of for the note
        /// </summary>
        public string text;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class noteParameters {
        
        /// <summary>
        /// Language parameters
        /// </summary>
        public language language;
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type of the note. For example: work or home
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class prodid {
        
        /// <summary>
        /// Name of the product
        /// </summary>
        public string text;
    }
    
    [Serializable()]
    [XmlType(TypeName="value-timestamp", Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot("rev", Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class valuetimestamp {
        
        /// <summary>
        /// Timestamp value
        /// </summary>
        public string timestamp;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class sound {
        
        /// <summary>
        /// Sound parameters
        /// </summary>
        public soundParameters parameters;
        
        /// <summary>
        /// URI that points to the sound
        /// </summary>
        [XmlElement(DataType="anyURI")]
        public string uri;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class soundParameters {
        
        /// <summary>
        /// Language parameters
        /// </summary>
        public language language;
        
        /// <summary>
        /// Alternet ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [System.Xml.Serialization.XmlArrayItemAttribute("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type of the sound. For example: work or home
        /// </summary>
        [System.Xml.Serialization.XmlArrayItemAttribute("text", IsNullable=false)]
        public typeText[] type;
        
        /// <summary>
        /// Media type parameters
        /// </summary>
        public mediatype mediatype;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class uid {
        
        /// <summary>
        /// Contains the URI
        /// </summary>
        [XmlElement(DataType="anyURI")]
        public string uri;
    }
    
    [Serializable()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class clientpidmap {
        
        /// <summary>
        /// Contains a small positive numeric ID value.
        /// </summary>
        [XmlElement(DataType="positiveInteger")]
        public string sourceid;
        
        /// <summary>
        /// Contains a URI or a URN
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string uri;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class url {
        
        /// <summary>
        /// URL parameters
        /// </summary>
        public urlParameters parameters;

        /// <summary>
        /// Specifies a uniform resource locator associated with the object to which the vCard refers.
        /// </summary>
        [XmlElement(DataType="anyURI")]
        public string uri;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class urlParameters {
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type of the URL. For example: work or home
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
        
        /// <summary>
        /// Media type parameters
        /// </summary>
        public mediatype mediatype;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class key {
        
        /// <summary>
        /// Parameters for the key
        /// </summary>
        public keyParameters parameters;
        
        /// <summary>
        /// Contains either a URI to the certificate or or the base64 encoded certificate. The
        /// value of the ItemElementName specifies the type of this field.
        /// </summary>
        [XmlElement("text", typeof(string))]
        [XmlElement("uri", typeof(string), DataType="anyURI")]
        [XmlChoiceIdentifier("ItemElementName")]
        public string Item;
        
        /// <summary>
        /// Specified the type of data in the Item field.
        /// </summary>
        [XmlIgnore()]
        public KeyItemChoiceEnum ItemElementName;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class keyParameters {
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type of the key. For example: work or home
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
        
        /// <summary>
        /// Media type parameters
        /// </summary>
        public mediatype mediatype;
    }
    
    /// <summary>
    /// Enumeration for the type of data in the Item field of the key class
    /// </summary>
    [Serializable()]
    [XmlType(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IncludeInSchema=false)]
    public enum KeyItemChoiceEnum {
        
        /// <summary>
        /// The Item field contains base64 data
        /// </summary>
        text,
        
        /// <summary>
        /// The Item field contains a URI
        /// </summary>
        uri,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class fburl {
        
        /// <summary>
        /// FBURL parameters
        /// </summary>
        public fburlParameters parameters;

        /// <summary>
        /// Specifies the URI for the busy time associated with the object that the vCard represents
        /// </summary>
        [XmlElement(DataType="anyURI")]
        public string uri;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class fburlParameters {
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type of the FBRURL. For example: work or home
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
        
        /// <summary>
        /// Media type parameters
        /// </summary>
        public mediatype mediatype;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class caladruri {
        
        /// <summary>
        /// CALADRURI parameters
        /// </summary>
        public caladruriParameters parameters;

        /// <summary>
        /// Specifies the calendar user address [RFC 5545] to which a scheduling request [RFC 5546] should
        /// be sent for the object represented by the vCard.
        /// </summary>
        [XmlElement(DataType="anyURI")]
        public string uri;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class caladruriParameters {
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type of the CALURIADR. For example: work or home
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
        
        /// <summary>
        /// Media type parameters
        /// </summary>
        public mediatype mediatype;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class caluri {
        
        /// <summary>
        /// CALURI parameters
        /// </summary>
        public caluriParameters parameters;
        
        /// <summary>
        /// URI for the calendar
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string uri;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class caluriParameters {
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type of the CALURI. For example: work or home
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
        
        /// <summary>
        /// Media type parameters
        /// </summary>
        public mediatype mediatype;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class vcards {
        
        /// <summary>
        /// An array of vcards
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("vcard")]
        public vcardType[] vcard;
    }
    
    [Serializable()]
    [XmlType(Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot("vcard", Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class vcardType {
        
        /// <summary>
        /// Addresses of the subject of the vCard
        /// </summary>
        [XmlElement("adr")]
        public adr[] adr;
        
        /// <summary>
        /// Anniversary
        /// </summary>
        public anniversary anniversary;
        
        /// <summary>
        /// Birth day of the subject
        /// </summary>
        public bday bday;
        
        /// <summary>
        /// Array of calendar URIs for scheduling requests
        /// </summary>
        [XmlElement("caladruri")]
        public caladruri[] caladruri;
        
        /// <summary>
        /// Array of calendar URIs
        /// </summary>
        [XmlElement("caluri")]
        public caluri[] caluri;
        
        /// <summary>
        /// Array of category information for the vCard
        /// </summary>
        [XmlElement("categories")]
        public categories[] categories;
        
        /// <summary>
        /// PID map items
        /// </summary>
        [XmlElement("clientpidmap")]
        public clientpidmap[] clientpidmap;
        
        /// <summary>
        /// Array of e-mail address for the subject of the vCard
        /// </summary>
        /// <seealso cref="EMail"/>
        [XmlElement("email")]
        public email[] email;
        
        /// <summary>
        /// Array of busy time information
        /// </summary>
        [XmlElement("fburl")]
        public fburl[] fburl;
        
        /// <summary>
        /// Array of formatted or full names for the subject of the vCard
        /// </summary>
        /// <seealso cref="FullName"/>
        [XmlElement("fn")]
        public fn[] fn;
        
        /// <summary>
        /// Location or global positioning of the subject of the vCard
        /// </summary>
        [XmlElement("geo")]
        public vcardTypeGeo[] geo;
        
        /// <summary>
        /// IMPP information
        /// </summary>
        [XmlElement("impp")]
        public impp[] impp;
        
        /// <summary>
        /// Certificate containing a public key
        /// </summary>
        [XmlElement("key")]
        public key[] key;
        
        /// <summary>
        /// Specifies the kind of object that the vCard represents
        /// </summary>
        public kind kind;
        
        /// <summary>
        /// Language information for the vCard
        /// </summary>
        [XmlElement("lang")]
        public lang[] lang;
        
        /// <summary>
        /// Logo information
        /// </summary>
        [XmlElement("logo")]
        public logo[] logo;
        
        /// <summary>
        /// Membership information
        /// </summary>
        [XmlElement("member")]
        public member[] member;
        
        /// <summary>
        /// Name information
        /// </summary>
        public n n;
        
        /// <summary>
        /// Nickname information
        /// </summary>
        [XmlElement("nickname")]
        public nickname[] nickname;
        
        /// <summary>
        /// Notes
        /// </summary>
        [XmlElement("note")]
        public note[] note;
        
        /// <summary>
        /// Organization information
        /// </summary>
        [XmlElement("org")]
        public org[] org;
        
        /// <summary>
        /// Image or photograph information
        /// </summary>
        [XmlElement("photo")]
        public photo[] photo;
        
        /// <summary>
        /// Product identification information
        /// </summary>
        public prodid prodid;
        
        /// <summary>
        /// Relationship information
        /// </summary>
        [XmlElement("related")]
        public related[] related;
        
        /// <summary>
        /// Revision of the vCard as a timestamp
        /// </summary>
        public valuetimestamp rev;
        
        /// <summary>
        /// Role information
        /// </summary>
        [XmlElement("role")]
        public role[] role;
        
        /// <summary>
        /// Gender information
        /// </summary>
        public gender gender;
        
        /// <summary>
        /// Sound contents information
        /// </summary>
        [XmlElement("sound")]
        public sound[] sound;
        
        /// <summary>
        /// Source information
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("source")]
        public source[] source;
        
        /// <summary>
        /// Telephone number information
        /// </summary>
        [XmlElement("tel")]
        public tel[] tel;
        
        /// <summary>
        /// Title information
        /// </summary>
        [XmlElement("title")]
        public title[] title;
        
        /// <summary>
        /// Timezone information
        /// </summary>
        [XmlElement("tz")]
        public vcardTypeTZ[] tz;
        
        /// <summary>
        /// Globally unique ID information
        /// </summary>
        public uid uid;
        
        /// <summary>
        /// URLs for more information relating to the subject of the vCard
        /// </summary>
        [XmlElement("url")]
        public url[] url;
        
        /// <summary>
        /// Group information
        /// </summary>
        [XmlElement("group")]
        public group[] group;
        
        /// <summary>
        /// Extension point for this class
        /// </summary>
        [XmlAnyElement()]
        public XmlElement[] Any;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class vcardTypeGeo {
        
        /// <summary>
        /// GEO parameters
        /// </summary>
        public vcardTypeGeoParameters parameters;

        /// <summary>
        /// Single URI containing a geo type of URI. For example: geo:37.386013,-122.082932
        /// </summary>
        [XmlElement(DataType="anyURI")]
        public string uri;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class vcardTypeGeoParameters {
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type of the GEO information. For example: work or home
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
        
        /// <remarks/>
        public mediatype mediatype;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class vcardTypeTZ {
        
        /// <summary>
        /// Time zone parameters
        /// </summary>
        public vcardTypeTZParameters parameters;

        /// <summary>
        /// The ItemElementName field determines the contents of this string. If the ItemElementName
        /// is equal to VcardTypeTzItemChoiceEnum.text, then It is expected that names from the public-domain Olson 
        /// database [https://www.ip2location.com/free/olson-timezone] will be used, but this is not a 
        /// restriction. See also https://www.iana.org/time-zones.
        /// If the ItemElementName is equal to VcardTypeTzItemChoiceEnum.uri then the contents is a URI. Use of a
        /// URI is To Be Determine (TBD).
        /// </summary>
        [XmlElement("text", typeof(string))]
        [XmlElement("uri", typeof(string), DataType="anyURI")]
        [XmlElement("utc-offset", typeof(string))]
        [XmlChoiceIdentifier("ItemElementName")]
        public string Item;
        
        /// <summary>
        /// Specifies the type of data in the Item field of this class
        /// </summary>
        [XmlIgnore()]
        public VcardTypeTzItemChoiceEnum ItemElementName;
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    public partial class vcardTypeTZParameters {
        
        /// <summary>
        /// Alternate ID parameters
        /// </summary>
        public altid altid;
        
        /// <summary>
        /// PID parameters
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public string[] pid;
        
        /// <summary>
        /// Preference parameters
        /// </summary>
        public pref pref;
        
        /// <summary>
        /// Type that the TZ information relates to. For example: work or home
        /// </summary>
        [XmlArrayItem("text", IsNullable=false)]
        public typeText[] type;
        
        /// <summary>
        /// Media type parameters
        /// </summary>
        public mediatype mediatype;
    }

    /// <summary>
    /// Enumeration that specifies the type of data in the Item field of the vcardTypeTZ class
    /// </summary>    
    [Serializable()]
    [XmlType(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IncludeInSchema=false)]
    public enum VcardTypeTzItemChoiceEnum {

        /// <summary>
        /// The Item field contains a time zone name.
        /// </summary>
        text,

        /// <summary>
        /// The Item field contains a URI (the scheme for the TZ has not been determined yet)
        /// </summary>
        uri,
        
        /// <summary>
        /// The Item field contains an offset from UTC time.
        /// Note: Section 6.5.1 of RFC 6350 states that a UTC offset should not be used.
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("utc-offset")]
        utcoffset,
    }
    
    [Serializable()]
    [XmlType(AnonymousType=true, Namespace="urn:ietf:params:xml:ns:vcard-4.0")]
    [XmlRoot(Namespace="urn:ietf:params:xml:ns:vcard-4.0", IsNullable=false)]
    public partial class group {

        /// <summary>
        /// Addresses of the subject of the group
        /// </summary>
        [XmlElement("adr")]
        public adr[] adr;

        /// <summary>
        /// Anniversary
        /// </summary>
        public anniversary anniversary;

        /// <summary>
        /// Birth day of the subject
        /// </summary>
        public bday bday;

        /// <summary>
        /// Array of calendar URIs for scheduling requests
        /// </summary>
        [XmlElement("caladruri")]
        public caladruri[] caladruri;

        /// <summary>
        /// Array of calendar URIs
        /// </summary>
        [XmlElement("caluri")]
        public caluri[] caluri;

        /// <summary>
        /// Array of category information for the group
        /// </summary>
        [XmlElement("categories")]
        public categories[] categories;

        /// <summary>
        /// PID map items
        /// </summary>
        [XmlElement("clientpidmap")]
        public clientpidmap[] clientpidmap;

        /// <summary>
        /// Array of e-mail address for the subject of the group
        /// </summary>
        [XmlElement("email")]
        public email[] email;

        /// <summary>
        /// Array of busy time information
        /// </summary>
        [XmlElement("fburl")]
        public fburl[] fburl;

        /// <summary>
        /// Array of formatted or full names for the subject of the group
        /// </summary>
        [XmlElement("fn")]
        public fn[] fn;

        /// <summary>
        /// Location or global positioning of the subject of the group
        /// </summary>
        [XmlElement("geo")]
        public vcardTypeGeo[] geo;

        /// <summary>
        /// IMPP information
        /// </summary>
        [XmlElement("impp")]
        public impp[] impp;

        /// <summary>
        /// Certificate containing a public key
        /// </summary>
        [XmlElement("key")]
        public key[] key;

        /// <summary>
        /// Specifies the kind of object that the group represents
        /// </summary>
        public kind kind;

        /// <summary>
        /// Language information for the group
        /// </summary>
        [XmlElement("lang")]
        public lang[] lang;

        /// <summary>
        /// Logo information
        /// </summary>
        [XmlElement("logo")]
        public logo[] logo;

        /// <summary>
        /// Membership information
        /// </summary>
        [XmlElement("member")]
        public member[] member;

        /// <summary>
        /// Name information
        /// </summary>
        public n n;

        /// <summary>
        /// Nickname information
        /// </summary>
        [XmlElement("nickname")]
        public nickname[] nickname;

        /// <summary>
        /// Notes
        /// </summary>
        [XmlElement("note")]
        public note[] note;

        /// <summary>
        /// Organization information
        /// </summary>
        [XmlElement("org")]
        public org[] org;

        /// <summary>
        /// Image or photograph information
        /// </summary>
        [XmlElement("photo")]
        public photo[] photo;

        /// <summary>
        /// Product identification information
        /// </summary>
        public prodid prodid;

        /// <summary>
        /// Relationship information
        /// </summary>
        [XmlElement("related")]
        public related[] related;

        /// <summary>
        /// Revision of the vCard as a timestamp
        /// </summary>
        public valuetimestamp rev;

        /// <summary>
        /// Role information
        /// </summary>
        [XmlElement("role")]
        public role[] role;

        /// <summary>
        /// Gender information
        /// </summary>
        public gender gender;

        /// <summary>
        /// Sound contents information
        /// </summary>
        [XmlElement("sound")]
        public sound[] sound;

        /// <summary>
        /// Source information
        /// </summary>
        [XmlElement("source")]
        public source[] source;

        /// <summary>
        /// Telephone number information
        /// </summary>
        [XmlElement("tel")]
        public tel[] tel;

        /// <summary>
        /// Title information
        /// </summary>
        [XmlElement("title")]
        public title[] title;

        /// <summary>
        /// Timezone information
        /// </summary>
        [XmlElement("tz")]
        public vcardTypeTZ[] tz;

        /// <summary>
        /// Globally unique ID information
        /// </summary>
        public uid uid;

        /// <summary>
        /// URLs for more information relating to the subject of the group
        /// </summary>
        [XmlElement("url")]
        public url[] url;

        /// <summary>
        /// Name of the group
        /// </summary>
        [XmlAttribute()]
        public string name;
    }
}
